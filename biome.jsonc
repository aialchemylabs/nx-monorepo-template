{
	"$schema": "https://biomejs.dev/schemas/2.1.2/schema.json",
	"vcs": {
		"enabled": true,
		"clientKind": "git",
		"useIgnoreFile": true
	},
	"files": {
		"ignoreUnknown": false
	},
	"formatter": {
		"enabled": true,
		"formatWithErrors": false,
		"indentStyle": "tab",
		"indentWidth": 2,
		"lineEnding": "lf",
		"lineWidth": 150,
		"attributePosition": "auto"
	},
	"linter": {
		"enabled": true,
		"rules": {
			"recommended": true,
			"a11y": {
				"useHtmlLang": "warn", // Not in recommended ruleset, turning on manually
				"noHeaderScope": "warn", // Not in recommended ruleset, turning on manually
				"useValidAriaRole": {
					"level": "warn",
					"options": {
						"ignoreNonDom": false,
						"allowInvalidRoles": ["none", "text"]
					}
				},
				"useSemanticElements": "warn", // Rule is buggy, revisit later
				"noSvgWithoutTitle": "warn", // We do not intend to adhere to this rule
				"useMediaCaption": "warn", // We would need a cultural change to turn this on
				"noAutofocus": "warn", // We're highly intentional about when we use autofocus
				"useFocusableInteractive": "warn", // Disable focusable interactive element requirement
				"useAriaPropsForRole": "warn", // Disable required ARIA attributes check
				"useKeyWithClickEvents": "off" // Disable keyboard event requirement with click events
			},
			"complexity": {
				"noUselessStringConcat": "warn", // Not in recommended ruleset, turning on manually
				"noForEach": "off", // forEach is too familiar to ban
				"noUselessSwitchCase": "warn", // opinionated to developer preferences
				"noUselessThisAlias": "warn", // opinionated to developer preferences
				"noBannedTypes": "warn"
			},
			"correctness": {
				"noUnusedImports": "warn", // opinionated to developer preferences
				"useJsxKeyInIterable": "warn", // Rule is buggy, revisit later
				"useExhaustiveDependencies": "warn" // Community feedback on this rule has been poor, we will continue with ESLint
			},
			"security": {
				"noDangerouslySetInnerHtml": "off" // opinionated due to requirements of the project
			},
			"style": {
				"useFragmentSyntax": "warn", // Not in recommended ruleset, turning on manually
				"noYodaExpression": "warn", // Not in recommended ruleset, turning on manually
				"useDefaultParameterLast": "warn", // Not in recommended ruleset, turning on manually
				"useExponentiationOperator": "off", // Obscure and arguably not easily readable
				"noUnusedTemplateLiteral": "warn", // Stylistic opinion
				"noUselessElse": "warn" // Stylistic opinion
			},
			"suspicious": {
				"noExplicitAny": "warn" // We trust developers
			}
		}
	},
	"javascript": {
		"jsxRuntime": "reactClassic",
		"formatter": {
			"jsxQuoteStyle": "double",
			"quoteProperties": "asNeeded",
			"trailingCommas": "all",
			"semicolons": "always",
			"arrowParentheses": "always",
			"bracketSpacing": true,
			"bracketSameLine": false,
			"quoteStyle": "single",
			"attributePosition": "auto"
		}
	},
	"json": {
		"formatter": {
			"enabled": true,
			"trailingCommas": "none"
		},
		"parser": {
			"allowComments": true,
			"allowTrailingCommas": false
		}
	},
	"css": {
		"formatter": { "enabled": false },
		"linter": { "enabled": false }
	},
	"overrides": [
		// Playwright requires an object destructure, even if empty
		// https://github.com/microsoft/playwright/issues/30007
		{
			"linter": {
				"rules": {
					"correctness": {
						"noEmptyPattern": "off"
					}
				}
			}
		}
	],
	"assist": {
		"enabled": true,
		"actions": {
			"source": {
				"organizeImports": "off"
			}
		}
	}
}
